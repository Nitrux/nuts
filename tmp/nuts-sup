#!/usr/bin/env bash

#############################################################################################################################################################################
#   The license used for this file and its contents is: BSD-3-Clause                                                                                                        #
#                                                                                                                                                                           #
#   Copyright <2023-2024> <Uri Herrera <uri_herrera@nxos.org>>                                                                                                              #
#                                                                                                                                                                           #
#   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:                          #
#                                                                                                                                                                           #
#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.                                        #
#                                                                                                                                                                           #
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer                                      #
#       in the documentation and/or other materials provided with the distribution.                                                                                         #
#                                                                                                                                                                           #
#    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software                    #
#       without specific prior written permission.                                                                                                                          #
#                                                                                                                                                                           #
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                      #
#    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS                  #
#    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE                 #
#    GOODS OR SERVICES; LOSS OF USE, DATA,   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,                      #
#    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
#############################################################################################################################################################################


# -- Exit on errors.

set -eu


# -- Set program name and version.

TOOL_NAME="Nitrux Update Tool System"
COMP_NAME="(Self-Update Component)"
SUP_VERSION="$(md5sum /usr/bin/nuts-sup | cut -c -32)"


# -- Print informative messages to stderr.

puts_info() {
	if [ -n "$1" ]; then
		printf "%s: \e[34mInfo:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Print success messages to stderr.

puts_success() {
	if [ -n "$1" ]; then
		printf "%s: \e[32mSuccess:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Display version of running component.

puts_info "$TOOL_NAME $COMP_NAME version $SUP_VERSION."


# -- Define the path of the nuts configuration file.

CONFIG_FILE="/etc/nuts.conf"


# -- Load values from configuration file.
# -- Include fix for SC1090 â€“ ShellCheck.

if [[ ! -f $CONFIG_FILE ]]; then
    puts_error "$TOOL_NAME configuration file not found!, quitting." 2>&1
    exit 1
else
	puts_success "Success! $TOOL_NAME configuration file found, continuing..."
	# shellcheck source=/dev/null
	. "$CONFIG_FILE"
fi


# -- Functions.

unmount_directory() {
  local DIRECTORY="$1"

  if mountpoint -q "$DIRECTORY"; then
    puts_info "Unmounting: $DIRECTORY"
    umount "$DIRECTORY"
  else
    puts_info "Directory is not mounted: $DIRECTORY"
  fi
}


# -- Variables.

NUTS_GIT_DIR=$(mktemp -d)

#   ====== START ======

# -- Flag parsing.

for cmd; do
	case "$cmd" in
		-v | --version)
			print_message "$TOOL_NAME" \
				"" \
				"Version $COMP_NAME: $SUP_VERSION." \
				"" \
				"The license used for this file and its contents is: BSD-3-Clause." \
				"" \
				"Authors:" \
				"" \
				"    Copyright <2023> <Uri Herrera <uri_herrera@nxos.org>>" \
				"" \
				"(c) $FECHA Some Rights Reserved. Made by $VENDOR"

			exit
			;;
	esac
done


# -- Save current value of NUTS_BRANCH.

CURRENT_NUTS_BRANCH=$(grep -oP '^NUTS_BRANCH=\K.*' "$CONFIG_FILE")


# -- Mount the devices filesystem.
# -- Check if /dev is already mounted.

if mountpoint -q /dev; then
    puts_info "/dev is already mounted. Unmounting..."
    umount /dev
fi

puts_info "Mounting /dev..."
mount -t devtmpfs dev /dev


# -- Update utility.

puts_info "Updating $TOOL_NAME to the latest version, continuing..."

git clone --depth=1 --branch "$NUTS_BRANCH" https://github.com/Nitrux/nuts.git "$NUTS_GIT_DIR" > /dev/null 2>&1
if [ ! -f /usr/bin/nuts ] || [ "$(md5sum "$NUTS_GIT_DIR/usr/bin/nuts" | cut -d " " -f 1)" != "$(md5sum /usr/bin/nuts | cut -d " " -f 1)" ]; then
    puts_info "$TOOL_NAME is being updated, continuing..."
    cp "$NUTS_GIT_DIR/usr/bin/nuts" /usr/bin
    cp "$NUTS_GIT_DIR/etc/nuts.conf" /etc
else
    unmount_directory "/dev"
    puts_info "$TOOL_NAME is already at the latest version. Bye."
    exit 0
fi


# -- Restore the value of NUTS_BRANCH in /etc/nuts.conf.

if [[ -n $CURRENT_NUTS_BRANCH ]]; then
    sed -i "s/^NUTS_BRANCH=.*$/NUTS_BRANCH=$CURRENT_NUTS_BRANCH/" "$CONFIG_FILE"
else
    puts_error "Failed to restore $TOOL_NAME branch." 
    exit 1
fi


# -- Unmount directories after update and before exiting chroot.

unmount_directory "$NUTS_DIR_SQS"
unmount_directory "/home"
unmount_directory "/dev"


# -- **DO NOT PERFORM ANY FILE OPERATION AFTER THIS POINT**

sync

puts_success "Success! $TOOL_NAME has been updated."


# -- Finalizing.
# -- Leave the Matri... I mean, the overlay.

REBOOT_SECONDS=5

puts_info "Rebooting to load changes into overlay in $REBOOT_SECONDS seconds. Bye."

sleep $REBOOT_SECONDS

reboot


#   ====== END ======
