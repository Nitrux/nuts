#!/bin/bash

#############################################################################################################################################################################
#   The license used for this file and its contents is: BSD-3-Clause                                                                                                        #
#                                                                                                                                                                           #
#   Copyright <2023> <Uri Herrera <uri_herrera@nxos.org>>                                                                                                                   #
#                                                                                                                                                                           #
#   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:                          #
#                                                                                                                                                                           #
#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.                                        #
#                                                                                                                                                                           #
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer                                      #
#       in the documentation and/or other materials provided with the distribution.                                                                                         #
#                                                                                                                                                                           #
#    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software                    #
#       without specific prior written permission.                                                                                                                          #
#                                                                                                                                                                           #
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                      #
#    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS                  #
#    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE                 #
#    GOODS OR SERVICES; LOSS OF USE, DATA,   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,                      #
#    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
#############################################################################################################################################################################


# -- Exit on errors.

set -xeu


# -- Set program name and version.

TOOL_NAME="Nitrux Update System Tool (cleanup update component)"
CCU_VERSION="$(md5sum /tmp/nuts-ccu | cut -c -32)"

# -- Print informative messages to stderr.

puts_info() {
	if [ -n "$1" ]; then
		printf "%s: \e[34mInfo:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Print success messages to stderr.

puts_success() {
	if [ -n "$1" ]; then
		printf "%s: \e[32mSuccess:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Display version of running component.

puts_info "$TOOL_NAME version $CCU_VERSION."


# --  Functions.

create_symlink() {
    local source="$1"
    local destination="$2"

    ln -svf "$source" "$destination"
}

#   ====== START ======

# -- Remove unwanted files and directories.

FILE_LIST="/tmp/nuts-cc-file.list"

while IFS= read -r ITEM; do
  ITEM="$(echo "$ITEM" | awk '{$1=$1};1')"

  if [[ -e "$ITEM" ]]; then
    echo "Deleting: $ITEM"
    rm -rf "$ITEM"
    find /usr/share/locale/ -type f -name 'calamares-python.mo' -exec rm -f {} \;
    find /usr/share/locale/ -type f -name 'apt.mo' -exec rm -f {} \;
    find /usr/share/locale/ -type f -name 'dpkg.mo' -exec rm -f {} \;
    find /usr/share/locale/ -type f -name 'libapt-pkg6.0.mo' -exec rm -f {} \;
  else
    echo "Item not found: $ITEM"
  fi
done < "$FILE_LIST"

puts_success "Success! Cleanup complete, continuing..."


# -- Create symlinks for MauiKit 3.0.1 libraries.

create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/filebrowsing/libMauiKitFileBrowsing3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/filebrowsing/libMauiKitFileBrowsing3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/texteditor/libMauiKitTextEditor3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/texteditor/libMauiKitTextEditor3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/imagetools/libMauiKitImageTools3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/imagetools/libMauiKitImageTools3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/accounts/libMauiKitAccounts3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/accounts/libMauiKitAccounts3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/documents/libMauiKitDocuments3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/documents/libMauiKitDocuments3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/calendar/libMauiKitCalendar3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/calendar/libMauiKitCalendar3.so"
create_symlink "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/terminal/libMauiKitTerminal3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/qt5/qml/org/mauikit/terminal/libMauiKitTerminal3.so"

create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitFileBrowsing3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitFileBrowsing3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitTextEditor3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitTextEditor3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitImageTools3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitImageTools3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitAccounts3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitAccounts3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitDocuments3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitDocuments3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitCalendar3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitCalendar3.so.3"
create_symlink "/usr/lib/x86_64-linux-gnu/libMauiKitTerminal3.so.3.0.1" "/usr/lib/x86_64-linux-gnu/libMauiKitTerminal3.so.3"


# -- Update /etc stuff we use.
# -- We do this here because otherwise, we wouldn't be able to clean up this stuff.
# -- For some inexplicable reason /etc, we can't add it to a SquashFS archive.

NX_SET_DIR=$(mktemp -d)
NX_SET_BRANCH="legacy-plasma"

rm -rf \
  /etc/10-globally-managed-devices.conf \
  /etc/dnsmasq.d/dns-block.conf \
  /etc/NetworkManager/conf.d/dns.conf \
  /etc/NetworkManager/dnsmasq.d/dnscrypt-proxy.conf \
  /etc/security/limits.d/{10-open-file-limits.conf,11-limits-disable-core-dump.conf} \
  /etc/skel \
  /etc/sysctl.d/10-nx-sysctl-overrides.conf \
  /etc/udev/rules.d/50-ioschedulers.rules \
  /etc/xdg \
  /usr/bin/desktop-config

git clone --depth=1 --branch $NX_SET_BRANCH https://github.com/Nitrux/nx-desktop-settings.git "$NX_SET_DIR" || {
    puts_error "Failed to clone repository."
    exit 1
}

cp "$NX_SET_DIR/etc/10-globally-managed-devices.conf" /etc
cp "$NX_SET_DIR/etc/dnsmasq.d/dns-block.conf" /etc/dnsmasq.d/
cp "$NX_SET_DIR/etc/NetworkManager/conf.d/dns.conf" /etc/NetworkManager/conf.d/
cp "$NX_SET_DIR/etc/NetworkManager/dnsmasq.d/dnscrypt-proxy.conf" /etc/NetworkManager/dnsmasq.d/
cp "$NX_SET_DIR/etc/security/limits.d/10-open-file-limits.conf" /etc/security/limits.d/
cp "$NX_SET_DIR/etc/security/limits.d/11-limits-disable-core-dump.conf" /etc/security/limits.d/
cp -r "$NX_SET_DIR/etc/skel" /etc
cp "$NX_SET_DIR/etc/sysctl.d/10-nx-sysctl-overrides.conf" /etc/sysctl.d/
cp "$NX_SET_DIR/etc/udev/rules.d/50-ioschedulers.rules" /etc/udev/rules.d/
cp -r "$NX_SET_DIR/etc/xdg" /etc
cp -r "$NX_SET_DIR/usr/bin/desktop-config" /usr/bin/

rm -r "$NX_SET_DIR"


# -- Link kernel image to newer kernel

ln -svf "$(echo /boot/vmlinuz* | tr ' ' '\n' | tail -n 1)" /vmlinuz
ln -svf "$(echo /boot/initrd* | tr ' ' '\n' | tail -n 1)" /initrd.img

if [[ ! -L "/vmlinuz" || ! -L "/initrd.img" ]]; then
  puts_info "Soft links '/vmlinuz' or '/initrd.img' in the root directory do not exist, quitting."
  exit 1
fi

LINKED_VMLINUZ=$(readlink -f "/vmlinuz")
LINKED_INITRD=$(readlink -f "/initrd.img")
VERSION_PATTERN_VMLINUZ=${LINKED_VMLINUZ#*-}

find /boot -maxdepth 1 -type f \( -name "vmlinuz-*" -o -name "initrd.img-*" \) -not -path "$LINKED_VMLINUZ" -not -path "$LINKED_INITRD" -delete

VERSION_PATTERN_VMLINUZ=${LINKED_VMLINUZ#*-}

find /boot -maxdepth 1 -type f -name "config-*" ! -name "config-$VERSION_PATTERN_VMLINUZ" -delete
find /boot -maxdepth 1 -type f -name "System.map-*" ! -name "System.map-$VERSION_PATTERN_VMLINUZ" -delete

puts_success "Non-linked vmlinuz-* and initrd.img-* files in /boot deleted successfully, continuing..."


# -- Update GRUB.

if update-grub; then
    puts_success "Success! GRUB menu was updated, continuing..."
else
    puts_error "Failed to update GRUB menu, quitting."
    exit 1
fi

#   ====== END ======
